{
	"info": {
		"_postman_id": "823eb960-4e34-46dc-83af-995c2ea1d944",
		"name": "httpbin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.info.requestName + \" Request 1\");\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.globals.get(\"uuid\"));\r",
							"\r",
							"pm.globals.unset(\"uuid\");\r",
							"\r",
							"let response = pm.response.json();\r",
							"//console.log(response);\r",
							"//let cd;\r",
							"//for(let ss in response.args){\r",
							"  // if(response.args[ss] == \"dsd\")\r",
							"   //console.log(\"Pass\")\r",
							"//}\r",
							"postman.setNextRequest(\"Request 3\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/get?myspace=3&jazz=dsd&color=brown&uuid={{uuid}}",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "myspace",
							"value": "3"
						},
						{
							"key": "jazz",
							"value": "dsd"
						},
						{
							"key": "color",
							"value": "brown"
						},
						{
							"key": "uuid",
							"value": "{{uuid}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "GET Request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/get?myspace=3&jazz=dsd&color=brown",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "myspace",
									"value": "3"
								},
								{
									"key": "jazz",
									"value": "dsd"
								},
								{
									"key": "color",
									"value": "brown"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 24 Apr 2021 04:50:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "470"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Server",
							"value": "gunicorn/19.9.0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						}
					],
					"cookie": [],
					"body": "{\n    \"args\": {\n        \"color\": \"brown\",\n        \"jazz\": \"dsd\",\n        \"myspace\": \"3\"\n    },\n    \"headers\": {\n        \"Accept\": \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Host\": \"httpbin.org\",\n        \"Postman-Token\": \"242bfd4a-4dbf-414d-97c2-38da18ea23d1\",\n        \"User-Agent\": \"PostmanRuntime/7.26.10\",\n        \"X-Amzn-Trace-Id\": \"Root=1-6083a398-62a0e7242e5652fc2b75717c\"\n    },\n    \"origin\": \"106.68.121.226\",\n    \"url\": \"https://httpbin.org/get?myspace=3&jazz=dsd&color=brown\"\n}"
				}
			]
		},
		{
			"name": "Request 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(  pm.globals.get(\"runonce\")){\r",
							"    console.log('Here')\r",
							"     postman.setNextRequest(\"Demo\");\r",
							"}\r",
							"  const response =  pm.response.json();\r",
							"pm.test(\"Status code is 200\",  function () {\r",
							"     pm.response.to.have.status(200);\r",
							"});\r",
							" console.log(\"Request 2\");\r",
							"\r",
							"pm.test(\"Your test name\",  function () {\r",
							"   \r",
							"     pm.expect(response.form.boardName).to.eql(pm.environment.get(\"boardName\"));\r",
							"});\r",
							"\r",
							" pm.globals.set(\"runonce\",1);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.environment.set(\"boardName\", getRandomBoardName());\r",
							"\r",
							"function getRandomBoardName(){\r",
							"    const boardName = \"My board name: \" + parseInt(Math.random() * 1000);\r",
							"    return boardName;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "boardName",
							"value": "{{boardName}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"pm.globals.set(\"uuid\", response.uuid);\r",
							"\r",
							"console.log(\"Request 3\");\r",
							"\r",
							"postman.setNextRequest(\"Request 2\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/uuid",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "Demo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let a = {\r",
							"    \"name\":\"John\"\r",
							"};\r",
							"let b = {\r",
							"    \"name\":\"James\"\r",
							"};\r",
							"\r",
							"pm.test(\"Your test1\", function () {\r",
							"\r",
							"    pm.expect(a).to.not.eql(b,\"Test\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test2\", function () {\r",
							"\r",
							"    pm.expect([]).to.be.empty;\r",
							"});\r",
							"\r",
							"var company = pm.environment.get(\"company\");\r",
							"var companies = pm.environment.get(\"companies\");\r",
							"\r",
							"if(company && companies.length>0){\r",
							"    postman.setNextRequest(\"http://requestbin.net/r/9dyx43n7\");\r",
							"    console.log(\"Ran this request\");\r",
							"}\r",
							"else{\r",
							"    postman.setNextRequest(null);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var companies = [\"Google\",\"FB\",\"PCB\"];\r",
							"\r",
							"var company = companies.shift();\r",
							"\r",
							"pm.environment.set(\"companies\",companies);\r",
							"pm.environment.set(\"company\",company);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "saaduddin2@gmail.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "123kane/",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{company}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://requestbin.net/r/9dyx43n7",
					"protocol": "http",
					"host": [
						"requestbin",
						"net"
					],
					"path": [
						"r",
						"9dyx43n7"
					],
					"query": [
						{
							"key": "apikey",
							"value": "PMAK-6086a3a9d6e8fe0052d01abe-a8dec902647e48c0d8c432f0048f16244e",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "External File Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"if(pm.iterationData.get(\"isValid\")){\r",
							"pm.test(\"first iteration\",function(){\r",
							"pm.expect(response.json.customerID).to.eql(pm.iterationData.get(\"customerID\"));\r",
							"});\r",
							"pm.test(\"first iteration\",function(){\r",
							"pm.expect(response.json.productID).to.eql(pm.iterationData.get(\"productID\"));\r",
							"})\r",
							"}\r",
							"\r",
							"else{\r",
							"    pm.test(\"Not valid\",function(){\r",
							"        pm.expect(response.json).to.be.null;\r",
							"    });\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"metaInfo\",JSON.stringify(pm.iterationData.get(\"metaInfo\")));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerID\":{{customerID}},\r\n    \"productID\":{{productID}},\r\n    \"metaInfo\":{{metaInfo}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "httpbin.org/post",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "External File Data2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code to be \" + pm.iterationData.get(\"expectedStatus\"),function(){\r",
							"    pm.expect(pm.response.code).to.eql(pm.iterationData.get(\"expectedStatus\"))\r",
							"    \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "httpbin.org/status/{{status}}",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"status",
						"{{status}}"
					]
				}
			},
			"response": []
		}
	]
}